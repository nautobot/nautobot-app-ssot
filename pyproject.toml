[tool.poetry]
name = "nautobot-ssot"
version = "1.6.6"
description = "Nautobot Single Source of Truth"
authors = ["Network to Code, LLC <info@networktocode.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/nautobot/nautobot-plugin-ssot"
repository = "https://github.com/nautobot/nautobot-plugin-ssot"
documentation = "https://nautobot-plugin-ssot.readthedocs.io"
keywords = ["nautobot", "nautobot-plugin"]
classifiers = [
    "Intended Audience :: Developers",
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
include = [
    "LICENSE",
    "README.md",
]
packages = [
    { include = "nautobot_ssot" },
]

[tool.poetry.dependencies]
Jinja2 = { version = ">=2.11.3", optional = true }
Markdown = "!=3.3.5"
PyYAML = { version = ">=6", optional = true }
cloudvision = { version = "^1.9.0", optional = true }
cvprac = { version = "^1.2.2", optional = true }
diffsync = "^1.6.0"
dnspython = { version = ">=2.1.0", optional = true }
ijson = { version = ">=2.5.1", optional = true }
ipfabric = { version = "~6.0.9", optional = true }
ipfabric-diagrams = { version = "~6.0.2", optional = true }
nautobot = "^1.4.0"
nautobot-device-lifecycle-mgmt = { version = "^1.0.2", optional = true }
netutils = { version = "^1.0.0", optional = true }
oauthlib = { version = ">=3.1.0", optional = true }
packaging = ">=21.3, <24"
prometheus-client = "~0.14.1"
python = ">=3.8,<3.12"
python-magic = { version = ">=0.4.15", optional = true }
pytz = { version = ">=2019.3", optional = true }
requests = { version = ">=2.21.0", optional = true }
requests-oauthlib = { version = ">=1.3.0", optional = true }
six = { version = ">=1.13.0", optional = true }
typing-extensions = { version = "^4.0.0", python = "<3.9" }

[tool.poetry.dev-dependencies]
bandit = "*"
black = "*"
coverage = "*"
django-debug-toolbar = "*"
django-extensions = "*"
# we need to pin flake8 because of package dependencies that cause it to downgrade and
# therefore cause issues with linting since older versions do not take .flake8 as config
flake8 = "^3.9.2"
invoke = "*"
ipython = "*"
jedi = "^0.17.2"
pydocstyle = "*"
pylint = "*"
pylint-django = "*"
pytest = "*"
python-dotenv = "^0.21.1"
yamllint = "*"
markdown-include = "*"
toml = "*"
# Rendering docs to HTML
mkdocs = "1.6.0"
# Material for MkDocs theme
mkdocs-material = "9.5.32"
# Render custom markdown for version added/changed/remove notes
markdown-version-annotations = "1.0.1"
# Automatic documentation from sources, for MkDocs
mkdocs-autorefs = "1.2.0"
mkdocstrings = "0.25.2"
mkdocstrings-python = "1.10.8"
griffe = "1.1.1"
requests-mock = "^1.10.0"
parameterized = "^0.8.1"
myst-parser = "^0.15.2"
nautobot-chatops = { version = "^2.0.2", extras = ["ipfabric"] }
nautobot-capacity-metrics = { version = "2.0.0", extras = ["ipfabric"] }
responses = "^0.14.0"

[tool.poetry.plugins."nautobot_ssot.data_sources"]
"example" = "nautobot_ssot.sync.example:ExampleSyncWorker"

[tool.poetry.plugins."nautobot_ssot.data_targets"]
"example" = "nautobot_ssot.sync.example:ExampleSyncWorker"

[tool.poetry.plugins."nautobot.workers"]
"ipfabric" = "nautobot_ssot.integrations.ipfabric.workers:ipfabric"

[tool.poetry.extras]
aci = [
    "PyYAML",
]
all = [
    "Jinja2",
    "PyYAML",
    "cloudvision",
    "cvprac",
    "dnspython",
    "ijson",
    "ipfabric",
    "ipfabric-diagrams",
    "nautobot-device-lifecycle-mgmt",
    "netutils",
    "oauthlib",
    "python-magic",
    "pytz",
    "requests",
    "requests-oauthlib",
    "six",
]
aristacv = [
    "cloudvision",
    "cvprac",
]
device42 = [
    "requests",
]
infoblox = [
    "dnspython",
]
ipfabric = [
    "ipfabric",
    "ipfabric-diagrams",
    "netutils",
]
# pysnow = "^0.7.17"
# PySNow is currently pinned to an older version of pytz as a dependency, which blocks compatibility with newer
# versions of Nautobot. See https://github.com/rbw/pysnow/pull/186
# For now, we have embedded a copy of PySNow under nautobot_ssot/integrations/servicenow/third_party/pysnow;
# here are its direct packaging dependencies:
pysnow = [
    "requests",
    "oauthlib",
    "python-magic",
    "requests-oauthlib",
    "six",
    "ijson",
    "pytz",
]
servicenow = [
    "Jinja2",
    "PyYAML",
    "ijson",
    "oauthlib",
    "python-magic",
    "pytz",
    "requests",
    "requests-oauthlib",
    "six",
]
nautobot-device-lifecycle-mgmt = [
    "nautobot-device-lifecycle-mgmt",
]

[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | nautobot_ssot/integrations/servicenow/third_party
  )/
  | settings.py     # This is where you define files that should not be stylized by black
                     # the root of the project
)
'''

[tool.pylint.master]
# Include the pylint_django plugin to avoid spurious warnings about Django patterns
load-plugins="pylint_django"
ignore=".venv"

[tool.pylint.basic]
# No docstrings required for private methods (Pylint default), or for test_ functions, or for inner Meta classes.
no-docstring-rgx="^(_|test_|Meta$)"

[tool.pylint.messages_control]
# Line length is enforced by Black, so pylint doesn't need to check it.
# Pylint and Black disagree about how to format multi-line arrays; Black wins.
disable = """,
    line-too-long,
    too-few-public-methods,
    """

[tool.pylint.miscellaneous]
# Don't flag TODO as a failure, let us commit with things that still need to be done in the code
notes = """,
    FIXME,
    XXX,
    """

[tool.pydocstyle]
convention = "google"
inherit = false
match = "(?!__init__).*\\.py"
match-dir = "(?!tests|migrations|development)[^\\.].*"
# D212 is enabled by default in google convention, and complains if we have a docstring like:
# """
# My docstring is on the line after the opening quotes instead of on the same line as them.
# """
# We've discussed and concluded that we consider this to be a valid style choice.
add_ignore = "D212"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = [
    "tests"
]
addopts = "-vv --doctest-modules"
